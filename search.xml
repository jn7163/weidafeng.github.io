<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>2019-nCov 爬虫、地图可视化</title>
      <link href="/2020/01/30/2019-ncov-pa-chong-di-tu-ke-shi-hua/"/>
      <url>/2020/01/30/2019-ncov-pa-chong-di-tu-ke-shi-hua/</url>
      
        <content type="html"><![CDATA[<h1 id="2019-nCov-爬虫、地图可视化"><a href="#2019-nCov-爬虫、地图可视化" class="headerlink" title="2019-nCov 爬虫、地图可视化"></a>2019-nCov 爬虫、地图可视化</h1><p>我们学校连发了几条通知，刚开始说不让提前去，然后是不让去，现在是“提前去的话，全校通报批评”。</p><p>这段时间医护人员前赴后继、奋战在最前线，他们是最可敬的人，相信武汉一定会好起来的，<strong>武汉加油！</strong></p><p>看到几个有意思的项目，爬取丁香园网站的疫情数据，存储在MongoDB数据库，以及地图形式的可视化，代码不长，很方便学习、练手，这里做个笔记，分享给大家。</p><h2 id="大纲"><a href="#大纲" class="headerlink" title="大纲"></a>大纲</h2><ol><li>爬虫获取数据</li><li>MongoDB存储数据</li><li>导出数据并可视化</li><li>可视化</li><li>代码实现</li><li>reference</li></ol><h2 id="0-完整代码"><a href="#0-完整代码" class="headerlink" title="0. 完整代码"></a>0. 完整代码</h2><p><a href="https://github.com/weidafeng/2019-nCov-Crawer-and-Visualization" target="_blank" rel="noopener">https://github.com/weidafeng/2019-nCov-Crawer-and-Visualization</a></p><h2 id="1-爬虫获取数据"><a href="#1-爬虫获取数据" class="headerlink" title="1. 爬虫获取数据"></a>1. 爬虫获取数据</h2><h3 id="requests"><a href="#requests" class="headerlink" title="requests"></a>requests</h3><p>完成浏览器的各种操作（get、post等），本项目用requets的get方法，获取丁香园网页内容。<br>基本用法：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">import</span> requests<span class="token operator">>></span><span class="token operator">></span> r <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'https://www.python.org'</span><span class="token punctuation">)</span><span class="token operator">>></span><span class="token operator">></span> r<span class="token punctuation">.</span>status_code<span class="token number">200</span><span class="token operator">>></span><span class="token operator">></span> <span class="token string">'Python is a programming language'</span> <span class="token keyword">in</span> r<span class="token punctuation">.</span>content<span class="token boolean">True</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 访问丁香园网站</span>r <span class="token operator">=</span> requests<span class="token punctuation">.</span>session<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token operator">=</span><span class="token string">'https://3g.dxy.cn/newh5/view/pneumonia'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="re"><a href="#re" class="headerlink" title="re"></a>re</h3><p>正则表达式模块，有很强大的语法，主要用于字符串的模式匹配。</p><h3 id="BeautifulSoup"><a href="#BeautifulSoup" class="headerlink" title="BeautifulSoup"></a>BeautifulSoup</h3><p>用于接收一个HTML或XML字符串，然后将其进行格式化，之后遍可以使用他提供的方法进行快速查找指定元素，从而使得在HTML或XML中查找指定元素变得简单。</p><p>如果只用正则表达式的话，通常需要些很长很复杂的pattern， 而借助bs，可以很方便的利用html、JavaScript、css的属性，很容易实现和理解。</p><pre class="line-numbers language-python"><code class="language-python">soup <span class="token operator">=</span> BeautifulSoup<span class="token punctuation">(</span>r<span class="token punctuation">.</span>content<span class="token punctuation">,</span> <span class="token string">'lxml'</span><span class="token punctuation">)</span> overall_information <span class="token operator">=</span> re<span class="token punctuation">.</span>search<span class="token punctuation">(</span>r<span class="token string">'\{("id".*?)\}'</span><span class="token punctuation">,</span>str<span class="token punctuation">(</span>soup<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">'script'</span><span class="token punctuation">,</span> attrs<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">'id'</span><span class="token punctuation">:</span> <span class="token string">'getStatisticsService'</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>比如这一句，pattern为正则表达式格式，搜索范围用bs限制在<code>&#39;getStatisticsService&#39;</code>属性段内。</p><h2 id="2-MongoDB存储数据"><a href="#2-MongoDB存储数据" class="headerlink" title="2. MongoDB存储数据"></a>2. MongoDB存储数据</h2><p>MongoDB是很常用的非关系型数据库，与之相对的是如MySQL等关系型数据库。</p><ul><li><p>关系模型指的就是二维表格模型，而一个关系型数据库就是由二维表及其之间的联系所组成的一个数据组织。一般是一个表格链接另一个表格（通过指定字段）、再链接另一个表格。</p></li><li><p>非关系型数据库以键值对存储，且结构不固定，每一个元组可以有不一样的字段，每个元组可以根据需要增加一些自己的键值对，不局限于固定的结构，可以减少一些时间和空间的开销。key-value数据库的主要特点是具有极高的并发读写性能.</p></li></ul><ol><li><p>下载安装MongoDB数据库（完全开源、免费）<br> <a href="https://www.mongodb.com/" target="_blank" rel="noopener">https://www.mongodb.com/</a>  </p></li><li><p>安装pymongo库<br> <code>pip install pymongo</code></p></li><li><p>新建数据库    </p></li></ol><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">from</span> pymongo <span class="token keyword">import</span> MongoClient<span class="token comment" spellcheck="true"># 使用自己的本地数据库，端口默认为27017</span>client <span class="token operator">=</span> MongoClient<span class="token punctuation">(</span><span class="token string">'localhost'</span><span class="token punctuation">,</span> <span class="token number">27017</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 数据库命名为2019-nCov</span>db <span class="token operator">=</span> client<span class="token punctuation">[</span><span class="token string">'2019-nCov'</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><p>插入/查找字段</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">DB</span><span class="token punctuation">:</span>  <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>      self<span class="token punctuation">.</span>db <span class="token operator">=</span> db  <span class="token keyword">def</span> <span class="token function">insert</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> collection<span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">:</span>      self<span class="token punctuation">.</span>db<span class="token punctuation">[</span>collection<span class="token punctuation">]</span><span class="token punctuation">.</span>insert<span class="token punctuation">(</span>data<span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">find_one</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> collection<span class="token punctuation">,</span> data<span class="token operator">=</span>None<span class="token punctuation">)</span><span class="token punctuation">:</span>      <span class="token keyword">return</span> self<span class="token punctuation">.</span>db<span class="token punctuation">[</span>collection<span class="token punctuation">]</span><span class="token punctuation">.</span>find_one<span class="token punctuation">(</span>data<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h2 id="3-导出数据"><a href="#3-导出数据" class="headerlink" title="3. 导出数据"></a>3. 导出数据</h2><p>爬取完毕后，可以在MongoDB数据库里查看数据，命令行方式不太友好：<br><img src="https://i.loli.net/2020/01/30/mZvD7HSu3sALFzb.png" alt="使用命令行访问MongoDB数据.png"></p><p>可以借助一些可视化软件，我这里使用pycharm下的Mongo Plugin插件。<br><a href="https://blog.csdn.net/wang_hugh/article/details/80547789" target="_blank" rel="noopener">安装方式</a></p><p>结果如图：<br><img src="https://i.loli.net/2020/01/30/D94zSKk31U2uo8b.png" alt="数据库及各个表格.png"></p><p>也可以使用pymongo导出数据：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 连接mongodb数据库</span>client <span class="token operator">=</span> pymongo<span class="token punctuation">.</span>MongoClient<span class="token punctuation">(</span><span class="token string">"localhost"</span><span class="token punctuation">,</span> <span class="token number">27017</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 连接数据库</span>db <span class="token operator">=</span> client<span class="token punctuation">[</span><span class="token string">"2019-nCov"</span><span class="token punctuation">]</span><span class="token comment" spellcheck="true"># 数据表</span>WUHAN_DB <span class="token operator">=</span> db<span class="token punctuation">[</span><span class="token string">"DXYProvince"</span><span class="token punctuation">]</span><span class="token comment" spellcheck="true"># 将mongodb中的数据读出</span><span class="token comment" spellcheck="true"># 查找、过滤、排序</span>data <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>list<span class="token punctuation">(</span>WUHAN_DB<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token string">'_id'</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">'comment'</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">'country'</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">'countryType'</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">'modifyTime'</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span><span class="token string">'operator'</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">'provinceName'</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">'provinceId'</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">'crawlTime'</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>    <span class="token string">'createTime'</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">'cityName'</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">'suspectedCount'</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span>sort<span class="token punctuation">(</span><span class="token string">'confirmedCount'</span><span class="token punctuation">,</span> pymongo<span class="token punctuation">.</span>DESCENDING<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 保存为csv格式</span>data<span class="token punctuation">.</span>to_csv<span class="token punctuation">(</span><span class="token string">'wuhan.csv'</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">,</span> index<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="4-可视化"><a href="#4-可视化" class="headerlink" title="4. 可视化"></a>4. 可视化</h2><p>借助第三方库 pyecharts 可以极其简便地实现地图形式的可视化。</p><ul><li><p>安装：</p><ul><li>pip install pyecharts==0.5.1  </li><li>pip install echarts-countries-pypkg   （额外安装地图，否则显示不完全）</li></ul></li><li><p>使用：<br>简单的9行代码就能实现  </p></li></ul><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">from</span> pyecharts <span class="token keyword">import</span> Map<span class="token keyword">import</span> numpy <span class="token keyword">as</span> npvalue <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>    <span class="token punctuation">[</span><span class="token number">1052</span><span class="token punctuation">,</span> <span class="token number">104</span><span class="token punctuation">,</span> <span class="token number">98</span><span class="token punctuation">,</span> <span class="token number">83</span><span class="token punctuation">,</span> <span class="token number">75</span><span class="token punctuation">,</span> <span class="token number">69</span><span class="token punctuation">,</span> <span class="token number">60</span><span class="token punctuation">,</span> <span class="token number">51</span><span class="token punctuation">,</span> <span class="token number">44</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">39</span><span class="token punctuation">,</span> <span class="token number">33</span><span class="token punctuation">,</span> <span class="token number">31</span><span class="token punctuation">,</span> <span class="token number">19</span><span class="token punctuation">,</span> <span class="token number">19</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>value <span class="token operator">=</span> np<span class="token punctuation">.</span>log10<span class="token punctuation">(</span>value<span class="token punctuation">)</span>attr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"湖北"</span><span class="token punctuation">,</span> <span class="token string">"浙江"</span><span class="token punctuation">,</span> <span class="token string">"广东"</span><span class="token punctuation">,</span> <span class="token string">"河南"</span><span class="token punctuation">,</span> <span class="token string">"重庆"</span><span class="token punctuation">,</span> <span class="token string">"湖南"</span><span class="token punctuation">,</span> <span class="token string">"安徽"</span><span class="token punctuation">,</span> <span class="token string">"北京"</span><span class="token punctuation">,</span> <span class="token string">"四川"</span><span class="token punctuation">,</span> <span class="token string">"上海"</span><span class="token punctuation">,</span> <span class="token string">"山东"</span><span class="token punctuation">,</span> <span class="token string">"广西"</span><span class="token punctuation">,</span> <span class="token string">"江苏"</span><span class="token punctuation">,</span> <span class="token string">"海南"</span><span class="token punctuation">,</span> <span class="token string">"辽宁"</span><span class="token punctuation">,</span> <span class="token string">"江西"</span><span class="token punctuation">,</span> <span class="token string">"福建"</span><span class="token punctuation">,</span> <span class="token string">"陕西"</span><span class="token punctuation">,</span> <span class="token string">"黑龙江"</span><span class="token punctuation">,</span> <span class="token string">"河北"</span><span class="token punctuation">,</span> <span class="token string">"云南"</span><span class="token punctuation">,</span> <span class="token string">"天津"</span><span class="token punctuation">,</span> <span class="token string">"山西"</span><span class="token punctuation">,</span> <span class="token string">"内蒙古"</span><span class="token punctuation">,</span> <span class="token string">"甘肃"</span><span class="token punctuation">,</span> <span class="token string">"香港"</span><span class="token punctuation">,</span> <span class="token string">"贵州"</span><span class="token punctuation">,</span> <span class="token string">"吉林"</span><span class="token punctuation">,</span> <span class="token string">"宁夏"</span><span class="token punctuation">,</span> <span class="token string">"台湾"</span><span class="token punctuation">,</span> <span class="token string">"新疆"</span><span class="token punctuation">,</span> <span class="token string">"青海"</span><span class="token punctuation">]</span>map <span class="token operator">=</span> Map<span class="token punctuation">(</span><span class="token string">"截至 2020-1-26 12:13:19 数据统计"</span><span class="token punctuation">,</span> width<span class="token operator">=</span><span class="token number">1000</span><span class="token punctuation">,</span> height<span class="token operator">=</span><span class="token number">800</span><span class="token punctuation">)</span>map<span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token string">"name-wdf"</span><span class="token punctuation">,</span> attr<span class="token punctuation">,</span> value<span class="token punctuation">,</span> is_map_symbol_show<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> maptype<span class="token operator">=</span><span class="token string">"china"</span><span class="token punctuation">,</span> is_visualmap<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> visual_text_color<span class="token operator">=</span><span class="token string">'#000'</span><span class="token punctuation">,</span> is_label_show<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> visual_range<span class="token operator">=</span><span class="token punctuation">[</span>np<span class="token punctuation">.</span>min<span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">,</span> np<span class="token punctuation">.</span>max<span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>map<span class="token punctuation">.</span>render<span class="token punctuation">(</span><span class="token string">'render.html'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>结果：<br><img src="https://i.loli.net/2020/01/30/DMcSiAdjahVlQpw.png" alt="可视化结果.png"></li></ul><h2 id="5-使用说明"><a href="#5-使用说明" class="headerlink" title="5. 使用说明"></a>5. 使用说明</h2><p>github：<br><a href="https://github.com/weidafeng/2019-nCov-Crawer-and-Visualization" target="_blank" rel="noopener">https://github.com/weidafeng/2019-nCov-Crawer-and-Visualization</a></p><p>usage：  </p><ol><li>python main.py  # 默认每分钟爬取一次，一次爬取后可以ctrl+C 关闭</li><li>python render_map.py  # 地图可视化</li></ol><h2 id="6-reference"><a href="#6-reference" class="headerlink" title="6. reference"></a>6. reference</h2><ol><li><a href="https://zhuanlan.zhihu.com/p/104026698" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/104026698</a> </li><li><a href="https://github.com/BlankerL/DXY-2019-nCoV-Crawler" target="_blank" rel="noopener">https://github.com/BlankerL/DXY-2019-nCoV-Crawler</a></li><li><a href="https://3g.dxy.cn/newh5/view/pneumonia" target="_blank" rel="noopener">https://3g.dxy.cn/newh5/view/pneumonia</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> 爬虫 </category>
          
          <category> MongoDB </category>
          
          <category> pyecharts </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 可视化 </tag>
            
            <tag> pyecharts </tag>
            
            <tag> MongoDB </tag>
            
            <tag> 爬虫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《Python数据可视化之matplotlib实践》配套代码</title>
      <link href="/2019/12/28/python-matplotlib-practices/"/>
      <url>/2019/12/28/python-matplotlib-practices/</url>
      
        <content type="html"><![CDATA[<h1 id="python-matplotlib-practices"><a href="#python-matplotlib-practices" class="headerlink" title="python-matplotlib-practices"></a>python-matplotlib-practices</h1><h1 id="《Python数据可视化之matplotlib实践》配套代码"><a href="#《Python数据可视化之matplotlib实践》配套代码" class="headerlink" title="《Python数据可视化之matplotlib实践》配套代码"></a>《Python数据可视化之matplotlib实践》配套代码</h1><p>这是我阅读《python数据可视化之matplotlib实践》时做的“笔记”，按照书本的顺序从头敲了一遍，提供了jupyter notebook和.py两个版本，方便查阅。</p><h2 id="代码仓库"><a href="#代码仓库" class="headerlink" title="代码仓库"></a>代码仓库</h2><p><a href="https://github.com/weidafeng/python-matplotlib-practices" target="_blank" rel="noopener">https://github.com/weidafeng/python-matplotlib-practices</a></p><h2 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h2><ol><li>chapter-1： matplotlib图表组成元素</li><li>chapter 2： 使用统计函数绘制简单图形</li><li>chapter 3： 绘制统计图形</li><li>chapter 4： 完善统计图形</li><li>chapter 6： 划分画布</li><li>chapter 7： 共享坐标轴</li><li>chapter 8： 坐标轴高阶应用</li><li>chapter 12： 查看颜色格式</li></ol><p><img src="https://i.loli.net/2019/12/28/QrE5KJbcngvtFLD.png" alt="overview"></p>]]></content>
      
      
      <categories>
          
          <category> matplotlib </category>
          
      </categories>
      
      
        <tags>
            
            <tag> matplotlib </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客说明</title>
      <link href="/2019/12/19/bo-ke-shuo-ming/"/>
      <url>/2019/12/19/bo-ke-shuo-ming/</url>
      
        <content type="html"><![CDATA[<h1 id="博客说明"><a href="#博客说明" class="headerlink" title="博客说明"></a>博客说明</h1><p>从19年1月20日开始，我把日常读的论文记录下来，除了做个笔记、方便回顾，更主要的原因是给毕业论文攒字数。</p><p>当初考虑过同步到网络，但怕毕设论文用了、影响查重，所以作罢。</p><p>但到现在，12月20日，将近一年的时间里，读了几十篇论文，总结了四百多页笔记，但研究方向跟随项目以及大潮，变了好多次~<br><img src="https://i.loli.net/2019/12/19/3IFyK9MRACYOmPU.png" alt="笔记-详情.png"></p><p>刚好前两天搭好了自己的<a href="https://weidafeng.github.io">博客</a>，就趁这个机会，一方面帮助自己复习、回顾一遍，一方面整理分享出来、供大家学习交流。</p><h2 id="论文介绍"><a href="#论文介绍" class="headerlink" title="论文介绍"></a>论文介绍</h2><p>我所选的论文，主要为计算机视觉相关，除了当时最新论文，也包括了领域内的经典，且基本都配套开源代码。</p><h2 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h2><p>大致为：</p><ul><li>论文标题<ul><li>阅读时间</li><li>论文链接、代码链接、项目主页、相关博客</li><li>摘要（原文+翻译）</li><li>简评（个人总结）</li><li>动机</li><li>相关工作</li><li>细节</li><li>实验</li><li>摘录（论文里的经典句式、短语）</li></ul></li></ul><h2 id="Notes"><a href="#Notes" class="headerlink" title="Notes:"></a>Notes:</h2><ul><li>博客搭在了gitalk，使用github账号登录后就可以留言评论</li><li>祝顺利毕业</li></ul>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>使用github和hexo配置个人博客</title>
      <link href="/2019/12/18/shi-yong-github-he-hexo-pei-zhi-ge-ren-bo-ke/"/>
      <url>/2019/12/18/shi-yong-github-he-hexo-pei-zhi-ge-ren-bo-ke/</url>
      
        <content type="html"><![CDATA[<h1 id="使用github配置个人博客"><a href="#使用github配置个人博客" class="headerlink" title="使用github配置个人博客"></a>使用github配置个人博客</h1><h2 id="安装node-js"><a href="#安装node-js" class="headerlink" title="安装node.js"></a>安装node.js</h2><p>Hexo基于Node.js，所以您还需要安装Node.js。Node.js的官网下载地址： <a href="http://nodejs.cn/download/%EF%BC%8C%E9%80%89%E6%8B%A9%E9%80%82%E5%90%88%E6%82%A8%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%AE%89%E8%A3%85%E7%A8%8B%E5%BA%8F%E5%8C%85%E3%80%82" target="_blank" rel="noopener">nodejs.cn/download/</a></p><h2 id="使用-npm-安装-Hexo-演示是在windows-64环境下-："><a href="#使用-npm-安装-Hexo-演示是在windows-64环境下-：" class="headerlink" title="使用 npm 安装 Hexo(演示是在windows-64环境下)："></a>使用 npm 安装 Hexo(演示是在windows-64环境下)：</h2><p>npm install -g hexo-cli</p><p><img src="/media/41c9f1fe8f1e95386debcb7d3a9ee5d7.png" alt=""></p><h2 id="使用-Hexo"><a href="#使用-Hexo" class="headerlink" title="使用 Hexo"></a>使用 Hexo</h2><p>指定一个空目录初始化hexo所需文件：</p><p>命令：</p><pre><code>hexo init 目录名(要求是空目录)</code></pre><p><img src="/media/c69bbf55ae4eeb8514e4d459441835d0.png" alt=""></p><p>新建完成后，生成如下目录文件：</p><pre><code>.gitignorenode_modulespackage-lock.jsonpackage.jsonscaffoldssourcethemes_config.yml</code></pre><h2 id="hexo-项目的文件说明"><a href="#hexo-项目的文件说明" class="headerlink" title="hexo 项目的文件说明"></a>hexo 项目的文件说明</h2><h3 id="config-yml-是配置信息"><a href="#config-yml-是配置信息" class="headerlink" title="_config.yml 是配置信息"></a>_config.yml 是配置信息</h3><p>网站的 配置 信息，您可以在此配置大部分的参数。 应用程序的信息。<br>更多关于该文件的说明可以参考：<a href="https://hexo.io/zh-cn/docs/configuration%E3%80%82" target="_blank" rel="noopener">hexo.io/zh-cn/docs/…</a></p><h3 id="scaffolds-模板文件"><a href="#scaffolds-模板文件" class="headerlink" title="scaffolds 模板文件"></a>scaffolds 模板文件</h3><p><a href="https://hexo.io/zh-cn/docs/writing" target="_blank" rel="noopener">模板</a>文件夹，当您新建文章时，hexo会根据模板来创建新的文件。</p><p>Hexo的模板是指在新建的markdown文件中默认填充的内容。例如，如果您修改scaffold/post.md中的Front-matter内容，那么每次新建一篇文章时都会包含这个修改。</p><h3 id="source"><a href="#source" class="headerlink" title="source"></a>source</h3><p>资源文件夹是存放用户资源的地方。除 _posts 文件夹之外，开头命名为(下划线)的文件<br>/ 文件夹和隐藏的文件将会被忽略。 Markdown 和 HTML文件会被解析并放到 public<br>文件夹，而其他文件会被拷贝过去。</p><h3 id="themes"><a href="#themes" class="headerlink" title="themes"></a>themes</h3><p><a href="https://hexo.io/zh-cn/docs/themes" target="_blank" rel="noopener">主题</a>文件夹。Hexo 会根据主题来生成静态页面。</p><h2 id="浏览博客雏形"><a href="#浏览博客雏形" class="headerlink" title="浏览博客雏形"></a>浏览博客雏形</h2><p>进入hexo项目目录中，使用如下命令开启博客服务：</p><pre><code>hexo s</code></pre><p><img src="/media/403c864af467f9402f6effcf8a79c989.png" alt=""></p><p>浏览器中访问：<a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000</a>。</p><p>此时看到的是source\_posts文件夹下的hello-world.md</p><h2 id="安装-hexo-deployer-git"><a href="#安装-hexo-deployer-git" class="headerlink" title="安装 hexo-deployer-git"></a>安装 hexo-deployer-git</h2><p><code>npm install hexo-deployer-git --save</code></p><p><img src="/media/a97adecbd96779fc5d15559f9891ac80.png" alt=""></p><h2 id="Hexo-主题"><a href="#Hexo-主题" class="headerlink" title="Hexo 主题"></a>Hexo 主题</h2><p>您可以在 <a href="https://hexo.io/themes/index.html" target="_blank" rel="noopener">hexo.io/themes/inde…</a> 进行主题的挑选更换。<br>下载好后放在themes文件夹内，同时在 _config.yml 中进行配置变更就好了。</p><h2 id="上传到github"><a href="#上传到github" class="headerlink" title="上传到github"></a>上传到github</h2><h3 id="需要修改的地方（URL）"><a href="#需要修改的地方（URL）" class="headerlink" title="需要修改的地方（URL）"></a>需要修改的地方（URL）</h3><pre><code># URL## If your site is put in a subdirectory, set url as&#39;http://yoursite.com/child&#39; and root as &#39;/child/&#39;url: https://weidafeng.github.io/root: /weidafeng.github.io/permalink: :year/:month/:day/:title/permalink_defaults:pretty_urls:</code></pre><h3 id="需要修改的地方（Deployment）"><a href="#需要修改的地方（Deployment）" class="headerlink" title="需要修改的地方（Deployment）"></a>需要修改的地方（<code>Deployment</code>）</h3><pre><code># Deployment## Docs: https://hexo.io/docs/deployment.htmldeploy:type: gitrepo: git\@github.com:weidafeng/weidafeng.github.io.gitbranch: mastermessage: &#39;bulid the first blog with hexo&#39;</code></pre><h3 id="命令："><a href="#命令：" class="headerlink" title="命令："></a>命令：</h3><pre><code>hexo cleanhexo d -g</code></pre>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2019/12/11/hello-world/"/>
      <url>/2019/12/11/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
